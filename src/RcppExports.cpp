// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// energy_diff3
double energy_diff3(double focal, double neigh, double B, double J, double inertia);
RcppExport SEXP _spatialising_energy_diff3(SEXP focalSEXP, SEXP neighSEXP, SEXP BSEXP, SEXP JSEXP, SEXP inertiaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type focal(focalSEXP);
    Rcpp::traits::input_parameter< double >::type neigh(neighSEXP);
    Rcpp::traits::input_parameter< double >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type J(JSEXP);
    Rcpp::traits::input_parameter< double >::type inertia(inertiaSEXP);
    rcpp_result_gen = Rcpp::wrap(energy_diff3(focal, neigh, B, J, inertia));
    return rcpp_result_gen;
END_RCPP
}
// flip_glauber_rcpp
NumericMatrix flip_glauber_rcpp(const NumericMatrix& input_matrix, const double& B, const double& J, const IntegerVector& rxs, const IntegerVector& rys, const NumericVector& rns, const int& n_rows, const int& n_cols, const double& inertia);
RcppExport SEXP _spatialising_flip_glauber_rcpp(SEXP input_matrixSEXP, SEXP BSEXP, SEXP JSEXP, SEXP rxsSEXP, SEXP rysSEXP, SEXP rnsSEXP, SEXP n_rowsSEXP, SEXP n_colsSEXP, SEXP inertiaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type input_matrix(input_matrixSEXP);
    Rcpp::traits::input_parameter< const double& >::type B(BSEXP);
    Rcpp::traits::input_parameter< const double& >::type J(JSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type rxs(rxsSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type rys(rysSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type rns(rnsSEXP);
    Rcpp::traits::input_parameter< const int& >::type n_rows(n_rowsSEXP);
    Rcpp::traits::input_parameter< const int& >::type n_cols(n_colsSEXP);
    Rcpp::traits::input_parameter< const double& >::type inertia(inertiaSEXP);
    rcpp_result_gen = Rcpp::wrap(flip_glauber_rcpp(input_matrix, B, J, rxs, rys, rns, n_rows, n_cols, inertia));
    return rcpp_result_gen;
END_RCPP
}
// flip_metropolis2_rcpp
NumericMatrix flip_metropolis2_rcpp(const NumericMatrix& input_matrix, const double& B, const double& J, const IntegerVector& rxs, const IntegerVector& rys, const NumericVector& rns, const int& n_rows, const int& n_cols, const double& inertia);
RcppExport SEXP _spatialising_flip_metropolis2_rcpp(SEXP input_matrixSEXP, SEXP BSEXP, SEXP JSEXP, SEXP rxsSEXP, SEXP rysSEXP, SEXP rnsSEXP, SEXP n_rowsSEXP, SEXP n_colsSEXP, SEXP inertiaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type input_matrix(input_matrixSEXP);
    Rcpp::traits::input_parameter< const double& >::type B(BSEXP);
    Rcpp::traits::input_parameter< const double& >::type J(JSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type rxs(rxsSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type rys(rysSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type rns(rnsSEXP);
    Rcpp::traits::input_parameter< const int& >::type n_rows(n_rowsSEXP);
    Rcpp::traits::input_parameter< const int& >::type n_cols(n_colsSEXP);
    Rcpp::traits::input_parameter< const double& >::type inertia(inertiaSEXP);
    rcpp_result_gen = Rcpp::wrap(flip_metropolis2_rcpp(input_matrix, B, J, rxs, rys, rns, n_rows, n_cols, inertia));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_spatialising_energy_diff3", (DL_FUNC) &_spatialising_energy_diff3, 5},
    {"_spatialising_flip_glauber_rcpp", (DL_FUNC) &_spatialising_flip_glauber_rcpp, 9},
    {"_spatialising_flip_metropolis2_rcpp", (DL_FUNC) &_spatialising_flip_metropolis2_rcpp, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_spatialising(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
